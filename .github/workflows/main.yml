name: Android CI
on:
  push:
    paths:
      - "app/**"
      - ".github/workflows/**"
      - "PC-Simulator-Save-Editor/**"
      - "build.gradle.kts"
      - "settings.gradle.kts"
  pull_request:
    types: [opened, reopened]

jobs:
  notifyDiscord:
    name: Notify Discord
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Git commit info
        id: info
        run: |
              echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
              echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
              echo "COMMIT_HASH=$(git log -1 --pretty=format:'%h')" >> $GITHUB_ENV

      - name: Publish
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "New build triggered"
          embed-description: "*Commit message:* ${{ env.COMMIT_MESSAGE }}\n*Commit hash:* ${{ env.COMMIT_HASH }}\nIf the build succeeds, ill send the APK here."
          embed-footer-text: "Triggered by ${{ env.COMMIT_AUTHOR }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Init submodules
        uses: snickerbockers/submodules-init@v4

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build library
        run: gradle library:assemble --stacktrace

      - name: Build developer APK
        run: gradle assembleRelease --stacktrace

      - name: ZipAlign & Sign Android release
        uses: kevin-david/zipalign-sign-android-release@v2.0.1
        id: sign
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE_64 }}
          alias: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.RELEASE_KEY_PASSWORD }}
          keyPassword: ${{ secrets.RELEASE_KEY_PASSWORD }}
          zipAlign: true

      - name: Rename APK
        run: |
          cp app/build/outputs/apk/release/app-release-unsigned.apk out/app-dev-unsigned.apk
          md5sum app/build/outputs/apk/release/app-release-unsigned.apk > out/app-dev-unsigned.md5

      # You only get an unsigned APK for forks

      - name: Copy Signed APK
        if: github.repository_owner == "BeboKhouja"
        run: |
          cp ${{steps.sign.outputs.signedReleaseFile}} out/app-dev.apk
          md5sum ${{steps.sign.outputs.signedReleaseFile}} > out/app-dev.md5

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dev-artifacts
          path: out/

  sendFile:
    name: Send file to Discord
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
      - name: Download Dev Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: dev-artifacts
          path: ./out/apk

      - name: Send APK to builds channel
        uses: sinshutu/upload-to-discord@master
        env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
            args: ./out/apk/app-release.apk ./out/apk/app-release.md5
