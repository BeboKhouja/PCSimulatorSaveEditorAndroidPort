name: Dev Builds
on:
  push:
      branches: 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v4.0.2
        with:
              path: |
                  ~/.gradle/caches
                  ~/.gradle/wrapper
              key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
              restore-keys: |
                  ${{ runner.os }}-gradle-


      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build dev apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: ZipAlign & Sign Android release
        uses: kevin-david/zipalign-sign-android-release@v2.0.1
        id: sign
        with:
            releaseDirectory: app/build/outputs/apk/release
            signingKeyBase64: ${{ secrets.KEYSTORE_BASE_64 }}
            alias: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
            keyStorePassword: ${{ secrets.RELEASE_KEY_PASSWORD }}
            keyPassword: ${{ secrets.RELEASE_KEY_PASSWORD }}
            zipAlign: true

      - uses: actions/upload-artifact@v4
        with:
            name: dev-artifacts
            path: ${{steps.sign_app.outputs.signedReleaseFile}}
